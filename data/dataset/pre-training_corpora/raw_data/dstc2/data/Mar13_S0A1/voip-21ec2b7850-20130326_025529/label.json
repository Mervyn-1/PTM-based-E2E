{
    "caller-id": "21ec2b7850", 
    "turns": [
        {
            "turn-index": 0, 
            "goal-labels": {
                "food": "german"
            }, 
            "transcription": "german food", 
            "method-label": "byconstraints", 
            "audio-file": "pt344x_0000989_0001076.wav", 
            "requested-slots": [], 
            "semantics": {
                "json": [
                    {
                        "slots": [
                            [
                                "food", 
                                "german"
                            ]
                        ], 
                        "act": "inform"
                    }
                ], 
                "cam": "inform(food=german)"
            }
        }, 
        {
            "turn-index": 1, 
            "goal-labels": {
                "food": "german", 
                "area": "dontcare"
            }, 
            "transcription": "any", 
            "method-label": "byconstraints", 
            "audio-file": "pt344x_0001544_0001586.wav", 
            "requested-slots": [], 
            "semantics": {
                "json": [
                    {
                        "slots": [
                            [
                                "this", 
                                "dontcare"
                            ]
                        ], 
                        "act": "inform"
                    }
                ], 
                "cam": "inform(=dontcare)"
            }
        }, 
        {
            "turn-index": 2, 
            "goal-labels": {
                "food": "german", 
                "area": "dontcare"
            }, 
            "transcription": "german food", 
            "method-label": "byconstraints", 
            "audio-file": "pt344x_0002190_0002282.wav", 
            "requested-slots": [], 
            "semantics": {
                "json": [
                    {
                        "slots": [
                            [
                                "food", 
                                "german"
                            ]
                        ], 
                        "act": "inform"
                    }
                ], 
                "cam": "inform(food=german)"
            }
        }, 
        {
            "turn-index": 3, 
            "goal-labels": {
                "food": "european", 
                "pricerange": "moderate", 
                "area": "dontcare"
            }, 
            "transcription": "moderate european", 
            "method-label": "byconstraints", 
            "audio-file": "pt344x_0002898_0003014.wav", 
            "requested-slots": [], 
            "semantics": {
                "json": [
                    {
                        "slots": [
                            [
                                "food", 
                                "european"
                            ]
                        ], 
                        "act": "inform"
                    }, 
                    {
                        "slots": [
                            [
                                "pricerange", 
                                "moderate"
                            ]
                        ], 
                        "act": "inform"
                    }
                ], 
                "cam": "inform(pricerange=moderate,food=european)"
            }
        }, 
        {
            "turn-index": 4, 
            "goal-labels": {
                "food": "european", 
                "pricerange": "moderate", 
                "area": "dontcare"
            }, 
            "transcription": "phone number", 
            "method-label": "byconstraints", 
            "audio-file": "pt344x_0003883_0003951.wav", 
            "requested-slots": [
                "phone"
            ], 
            "semantics": {
                "json": [
                    {
                        "slots": [
                            [
                                "slot", 
                                "phone"
                            ]
                        ], 
                        "act": "request"
                    }
                ], 
                "cam": "request(phone)"
            }
        }, 
        {
            "turn-index": 5, 
            "goal-labels": {
                "food": "european", 
                "pricerange": "moderate", 
                "area": "dontcare"
            }, 
            "transcription": "phone number", 
            "method-label": "byconstraints", 
            "audio-file": "pt344x_0004574_0004644.wav", 
            "requested-slots": [
                "phone"
            ], 
            "semantics": {
                "json": [
                    {
                        "slots": [
                            [
                                "slot", 
                                "phone"
                            ]
                        ], 
                        "act": "request"
                    }
                ], 
                "cam": "request(phone)"
            }
        }, 
        {
            "turn-index": 6, 
            "goal-labels": {
                "food": "european", 
                "pricerange": "moderate", 
                "area": "dontcare"
            }, 
            "transcription": "thank you good bye", 
            "method-label": "finished", 
            "audio-file": "pt344x_0005703_0005816.wav", 
            "requested-slots": [], 
            "semantics": {
                "json": [
                    {
                        "slots": [], 
                        "act": "thankyou"
                    }, 
                    {
                        "slots": [], 
                        "act": "bye"
                    }
                ], 
                "cam": "thankyou()|bye()"
            }
        }
    ], 
    "task-information": {
        "goal": {
            "text": "Task 02517: You want to find and it should serve german food. You don't care about the price range. If there is no such venue how about modern european type of food. Make sure you get the phone number.", 
            "request-slots": [
                "phone"
            ], 
            "constraints": [
                [
                    "food", 
                    "modern european"
                ], 
                [
                    "pricerange", 
                    "dontcare"
                ]
            ]
        }, 
        "feedback": {
            "questionnaire": [
                [
                    "The system understood me well.", 
                    "strongly agree"
                ]
            ], 
            "comments": "Very easy call this time out. Took a few tries to get German Food, and then had Modern European first try.", 
            "success": true
        }
    }, 
    "session-id": "voip-21ec2b7850-20130326_025529"
}